package leetcode;

public class MaximumNumberOfIntegersToChooseFromARange_I {
	public static void main(String[] args) {
		int[] t1 = { 1, 6, 5 };
		System.out.println(maxCount(t1, 5, 6));

		int[] t2 = { 1, 2, 3, 4, 5, 6, 7 };
		System.out.println(maxCount(t2, 8, 1));

		int[] t3 = { 11 };
		System.out.println(maxCount(t3, 7, 50));

		int[] t4 = { 193, 363, 335, 233, 215, 519, 180, 167, 10, 501, 591, 471, 421, 425, 344, 533, 555, 477, 59, 28,
				92, 66, 266, 530, 595, 264, 331, 462, 268, 521, 401, 9, 464, 275, 166, 527, 218, 219, 107, 34, 367, 117,
				42, 172, 291, 392, 35, 160, 294, 192, 342, 168, 349, 328, 578, 240, 470, 301, 574, 222, 173, 438, 318,
				476, 546, 64, 542, 339, 137, 585, 39, 5, 312, 103, 87, 372, 589, 513, 217, 90, 379, 161, 506, 487, 326,
				139, 452, 525, 223, 232, 429, 31, 245, 198, 76, 423, 255, 243, 141, 303, 150, 273, 529, 176, 231, 73,
				337, 165, 494, 400, 136, 142, 33, 495, 369, 430, 511, 498, 465, 582, 199, 409, 347, 537, 602, 395, 83,
				209, 346, 548, 485, 109, 333, 382, 30, 248, 146, 63, 315, 415, 325, 327, 186, 490, 133, 262, 187, 360,
				155, 356, 532, 17, 127, 13, 512, 37, 386, 220, 422, 457, 202, 545, 373, 178, 442, 428, 552, 417, 113,
				522, 310, 330, 491, 140, 260, 147, 292, 507, 441, 517, 3, 132, 324, 469, 188, 7, 461, 299, 376, 115,
				284, 68, 480, 229, 19, 162, 46, 444, 394, 305, 189, 18, 535, 154, 263, 427, 288, 420, 570, 404, 478,
				190, 607, 49, 135, 381, 343, 371, 560, 144, 524, 283, 259, 431, 196, 278, 298, 112, 316, 80, 405, 29,
				432, 354, 86, 234, 411, 447, 157, 58, 85, 48, 27, 104, 365, 120, 397, 267, 433, 253, 1, 562, 221, 276,
				489, 575, 350, 368, 52, 391, 170, 252, 448, 272, 443, 608, 210, 446, 101, 314, 16, 60, 455, 138, 580,
				541, 99, 93, 295, 601, 102, 515, 62, 539, 111, 364, 598, 70, 466, 274, 75, 399, 370, 44, 45, 473, 378,
				282, 481, 216, 171, 551, 323, 317 };

		System.out.println(maxCount(t4, 5080, 14));

	}

	public static int maxCount(int[] banned, int n, int maxSum) {
		boolean[] arr = new boolean[n + 1];

		for (int b : banned) {
			if (b <= n)
				arr[b] = true;
		}

		int sum = 0, cnt = 0;

		for (int i = 1; i < n + 1; i++) {

			if (sum + i > maxSum)
				break;

			if (!arr[i]) {
				sum += i;
				cnt++;
			}
		}

		return cnt;
	}
}
